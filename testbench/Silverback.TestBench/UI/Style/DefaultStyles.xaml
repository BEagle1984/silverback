<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <FontFamily x:Key="DefaultFontFamily">JetBrainsMono Nerd Font Mono, Cascadia Code, Consolas</FontFamily>

    <Style TargetType="Control">
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
    </Style>

    <Style TargetType="Window" BasedOn="{StaticResource {x:Type Control}}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
    </Style>

    <Style TargetType="StackPanel">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
    </Style>
    <Style TargetType="Grid">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
    </Style>
    <Style TargetType="DockPanel">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
    </Style>

    <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type Control}}">
        <Setter Property="Margin" Value="5" />
    </Style>

    <Style TargetType="GroupBox" BasedOn="{StaticResource {x:Type Control}}">
        <Setter Property="Margin" Value="10" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>

    <Style TargetType="ProgressBar" BasedOn="{StaticResource {x:Type Control}}">
        <Setter Property="Margin" Value="10" />
        <Setter Property="Height" Value="20" />
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Control}}">
        <Setter Property="Margin" Value="10" />
        <Setter Property="Padding" Value="5" />
    </Style>

    <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type Control}}">
        <Setter Property="Margin" Value="10" />
        <Setter Property="Padding" Value="5" />
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
    </Style>
    <Style x:Key="Label" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Margin" Value="0 5 10 10" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style x:Key="HorizontallyStackedLabel" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Margin" Value="20 5 10 10" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style x:Key="TopLabel" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Margin" Value="0 10 0 5" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style x:Key="FirstTopLabel" TargetType="TextBlock" BasedOn="{StaticResource TopLabel}">
        <Setter Property="Margin" Value="0 0 0 5" />
    </Style>
    <Style x:Key="Hint" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Margin" Value="0 10  0 0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontStyle" Value="Italic" />
        <Setter Property="Foreground" Value="DimGray" />
    </Style>

    <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type Control}}">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type Control}}">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="ReadOnlyTextBox" TargetType="TextBox">
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="IsHitTestVisible" Value="True" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>
    <Style x:Key="ReadOnlyTextArea" TargetType="TextBox" BasedOn="{StaticResource ReadOnlyTextBox}">
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
    </Style>

    <Style TargetType="TabControl" BasedOn="{StaticResource {x:Type Control}}">
        <Setter Property="Margin" Value="10" />
        <Setter Property="Background" Value="Transparent" />
    </Style>
    <Style TargetType="TabItem" BasedOn="{StaticResource {x:Type Control}}">
        <Setter Property="Background" Value="Transparent" />
    </Style>
    <Style TargetType="TabPanel">
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style TargetType="DataGrid">
        <Setter Property="HorizontalGridLinesBrush" Value="Gray" />
        <Setter Property="VerticalGridLinesBrush" Value="Gray" />
    </Style>

    <Style TargetType="DataGridRow">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="DataGridCell">
        <Setter Property="Padding" Value="5"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="CheckBox" x:Key="DataGridCheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="Margin" Value="0" />
    </Style>
</ResourceDictionary>

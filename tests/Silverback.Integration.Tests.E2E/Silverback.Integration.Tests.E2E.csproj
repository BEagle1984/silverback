<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>$(TestsTargetFrameworks)</TargetFrameworks>
    <SuppressTfmSupportBuildWarnings>true</SuppressTfmSupportBuildWarnings>
    <CheckEolTargetFramework>false</CheckEolTargetFramework>
    <RootNamespace>Silverback.Tests.Integration.E2E</RootNamespace>
    <LangVersion>$(LangVersion)</LangVersion>
    <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="coverlet.msbuild">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Ductus.FluentDocker" />
    <PackageReference Include="FluentAssertions" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.Testing" Condition="'$(TargetFramework)'=='$(CurrentLatestFramework)'" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.Testing" Condition="'$(TargetFramework)'!='$(CurrentLatestFramework)'" />
    <PackageReference Include="Microsoft.Data.Sqlite.Core" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Condition="'$(TargetFramework)'=='$(CurrentLatestFramework)'" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Condition="'$(TargetFramework)'!='$(CurrentLatestFramework)'" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Condition="'$(TargetFramework)'=='$(CurrentLatestFramework)'" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Condition="'$(TargetFramework)'!='$(CurrentLatestFramework)'" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" />
    <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Condition="'$(TargetFramework)'=='$(CurrentLatestFramework)'" />
    <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Condition="'$(TargetFramework)'!='$(CurrentLatestFramework)'" />
    <PackageReference Include="NSubstitute" />
    <PackageReference Include="xunit" />
    <PackageReference Include="xunit.runner.visualstudio">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\src\Silverback.Core.Rx\Silverback.Core.Rx.csproj" />
    <ProjectReference Include="..\..\src\Silverback.Integration.Kafka.SchemaRegistry\Silverback.Integration.Kafka.SchemaRegistry.csproj" />
    <ProjectReference Include="..\Silverback.Tests.Common\Silverback.Tests.Common.csproj" />
    <ProjectReference Include="..\..\src\Silverback.Core.Model\Silverback.Core.Model.csproj" />
    <ProjectReference Include="..\..\src\Silverback.Integration.Kafka\Silverback.Integration.Kafka.csproj" />
    <ProjectReference Include="..\..\src\Silverback.Integration.Kafka.Testing\Silverback.Integration.Kafka.Testing.csproj" />
    <ProjectReference Include="..\..\src\Silverback.Integration.MQTT\Silverback.Integration.MQTT.csproj" />
    <ProjectReference Include="..\..\src\Silverback.Integration.MQTT.Testing\Silverback.Integration.MQTT.Testing.csproj" />
    <ProjectReference Include="..\..\src\Silverback.Integration.Newtonsoft\Silverback.Integration.Newtonsoft.csproj" />
    <ProjectReference Include="..\..\src\Silverback.Integration.HealthChecks\Silverback.Integration.HealthChecks.csproj" />
    <ProjectReference Include="..\..\src\Silverback.Storage.Memory\Silverback.Storage.Memory.csproj" />
    <ProjectReference Include="..\..\src\Silverback.Storage.Sqlite\Silverback.Storage.Sqlite.csproj" />
    <ProjectReference Include="..\..\src\Silverback.Storage.PostgreSql\Silverback.Storage.PostgreSql.csproj" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFramework)'=='$(CurrentLatestFramework)'">
    <ProjectReference Include="..\..\src\Silverback.Storage.EntityFramework\Silverback.Storage.EntityFramework.csproj" />
  </ItemGroup>
  <ItemGroup>
    <None Include="..\xunit.runner.json">
      <Link>xunit.runner.json</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
</Project>
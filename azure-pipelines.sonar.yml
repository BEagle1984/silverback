name: sonar.$(date:yyyyMMdd)$(rev:.r)

pool:
  vmImage: 'ubuntu-20.04'

variables:
  buildConfiguration: 'Release'
  enableLegacyVersionTests: false

steps:
  # Install .NET SDK
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '8.0.x'
    displayName: 'Install SDK 8.0.x'
  # Build, test and analyze
  - task: SonarCloudPrepare@3
    inputs:
      SonarCloud: 'Silverback SonarCloud'
      organization: 'silverback'
      scannerMode: 'dotnet'
      projectKey: 'silverback'
      projectName: 'silverback'
      projectVersion: '5.0.0'
      extraProperties: |
        sonar.exclusions=**/obj/**,**/*.dll
        sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/**/coverage.*.opencover.xml
        sonar.cs.vstest.reportsPaths=$(Agent.TempDirectory)/*.trx
    displayName: 'Prepare code analysis on SonarCloud'
  - script: |
      dotnet build Silverback.sln --configuration $(buildConfiguration)
    displayName: 'Build ($(buildConfiguration))'
  - script: |
      dotnet test Silverback.sln \
        --configuration $(buildConfiguration) \
        --no-build \
        --verbosity Normal \
        --logger trx \
        --framework net8.0 \
        --filter "Type!=E2E&Dependency!=Docker&CI!=Skip" \
        --collect "Code coverage" \
        -p:CollectCoverage=true \
        -p:CoverletOutputFormat=opencover%2ccobertura \
        -p:Exclude="[xunit.*]*%2c[Silverback.Tests.*]*"
    displayName: 'Run unit tests (.NET 8)'
  - script: |
      dotnet test Silverback.sln \
        --configuration $(buildConfiguration) \
        --no-build \
        --verbosity Normal \
        --logger trx \
        --framework net8.0 \
        --filter "Type=E2E&Dependency!=Docker&CI!=Skip" \
        --collect "Code coverage" \
        -p:CollectCoverage=true \
        -p:CoverletOutputFormat=opencover%2ccobertura \
        -p:Exclude="[xunit.*]*%2c[Silverback.Tests.*]*"
    displayName: 'Run E2E tests (.NET 8)'
  - script: |
      dotnet test Silverback.sln \
      --configuration $(buildConfiguration) \
      --no-build \
      --verbosity Normal \
      --logger trx \
      --framework net6.0 \
      --filter "Type!=E2E&Dependency!=Docker&CI!=Skip" \
      --collect "Code coverage" \
      -p:CollectCoverage=true \
      -p:CoverletOutputFormat=opencover%2ccobertura \
      -p:Exclude="[xunit.*]*%2c[Silverback.Tests.*]*"
    displayName: 'Run unit tests (.NET 6)'
    condition: eq(variables.enableLegacyVersionTests, true)
  - script: |
      dotnet test Silverback.sln \
        --configuration $(buildConfiguration) \
        --no-build \
        --verbosity Normal \
        --logger trx \
        --framework net6.0 \
        --filter "Type=E2E&Dependency!=Docker&CI!=Skip" \
        --collect "Code coverage" \
        -p:CollectCoverage=true \
        -p:CoverletOutputFormat=opencover%2ccobertura \
        -p:Exclude="[xunit.*]*%2c[Silverback.Tests.*]*"
    displayName: 'Run E2E tests (.NET 6)'
    condition: eq(variables.enableLegacyVersionTests, true)
  - task: SonarCloudAnalyze@3
    condition: succeededOrFailed()
    displayName: 'Run SonarCloud analysis'
  - task: SonarCloudPublish@3
    condition: succeededOrFailed()
    displayName: 'Publish SonarCloud quality gate result'
  # Publish results
  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testRunner: 'VSTest'
      testResultsFiles: '**/*.trx'
    displayName: 'Publish test results'
  - task: PublishCodeCoverageResults@2
    condition: succeededOrFailed()
    inputs:
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.*.cobertura.xml'
      codecoverageTool: 'Cobertura'
    displayName: 'Publish code coverage results'
